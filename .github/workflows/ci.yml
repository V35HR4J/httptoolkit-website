name: CI
on: [push, pull_request]
jobs:
  build:
    name: Build & test
    runs-on: ubuntu-latest
    container: httptoolkit/act-build-base
    steps:
      - uses: actions/checkout@v3

      # Install Node 14
      - uses: actions/setup-node@v3
        with:
          node-version: 14
          cache: 'npm'

      - run: npm install -g npm@8.5.5

      # Install & build & test:
      - run: npm ci

      # Build without secrets for previews, in non-push cases:
      - name: Build for preview
        if: github.event_name != 'push'
        run: npm run build
        env:
          NODE_ENV: development

      # Build with secrets for production, on push only:
      - name: Build for production
        if: github.event_name == 'push'
        run: npm run build
        env:
          NODE_ENV: production
          GATSBY_POSTHOG_KEY: ${{ secrets.GATSBY_POSTHOG_KEY }}

      - uses: actions/upload-artifact@v3
        with:
          name: public
          path: public/*
          if-no-files-found: error

  publish-netlify:
    name: Deploy ${{ (github.ref == 'refs/heads/main' && 'to Netlify production') || 'Netlify preview' }}
    runs-on: ubuntu-latest
    container: httptoolkit/act-build-base
    needs: build
    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v3
        with:
          name: public
          path: public

      - name: Deploy to Netlify
        uses: nwtgck/actions-netlify@v1.1
        with:
          publish-dir: './public'
          production-branch: main # Main goes to prod, others do deploy previews
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: GHA Deploy - ${{ github.event.head_commit.message }}
          enable-commit-status: true
          enable-pull-request-comment: false
          enable-commit-comment: false
          netlify-config-path: ./netlify.toml
          alias: ${{ github.sha }}
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        timeout-minutes: 5

  publish-scaleway:
    name: Deploy to Docker Hub & Scaleway
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    container: httptoolkit/act-build-base
    needs: build
    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v3
        with:
          name: public
          path: public

      - uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          images: httptoolkit/website
          tags: |
            type=raw,value=prod,enable={{is_default_branch}}
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha

      - name: Publish to Docker Hub
        uses: docker/build-push-action@v4
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Redeploy container
        uses: thibaultchazal/scaleway-serverless-container-deploy-action@0d290edda0c3359e51442bd8bf730eafef4e290f
        with:
          container_id: ${{ vars.SCW_API_CONTAINER_ID }}
          secret_key: ${{ secrets.SCW_SECRET_KEY }}
          registry_image_url: "registry.hub.docker.com/httptoolkit/website:prod"

      - name: Flush CDN cache
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          # Clear CDN cache to re-request content:
          curl -f --request POST \
            --url https://api.bunny.net/pullzone/$PULL_ZONE_ID/purgeCache \
            --header "AccessKey: $BUNNY_SITE_API_KEY"
        env:
          PULL_ZONE_ID: 960393
          BUNNY_SITE_API_KEY: ${{ secrets.BUNNY_SITE_API_KEY }}